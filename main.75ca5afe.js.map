{"version":3,"sources":["scripts/main.js"],"names":["leftClick","rightClick","resolveMessage","text","document","body","insertAdjacentHTML","rejectedMessage","firstPromise","Promise","resolve","reject","addEventListener","evt","hasClickedLeft","setTimeout","Error","secondPromise","preventDefault","thirdPromise","then","catch"],"mappings":";AAAA,aAEA,IAAIA,EAAY,GACZC,EAAa,GAEXC,EAAiB,SAACC,GACtBC,SAASC,KAAKC,mBAAmB,aAE3BH,6DAAAA,OAAAA,EAFN,sBAMII,EAAkB,SAACJ,GACvBC,SAASC,KAAKC,mBAAmB,aAE7BH,yDAAAA,OAAAA,EAFJ,kBAOIK,EAAe,IAAIC,QAAQ,SAACC,EAASC,GACzCP,SAASC,KAAKO,iBAAiB,QAAS,SAACC,GACnCA,EAAIC,iBAGRd,GAAY,EACZU,EAAQ,iCAGVK,WAAW,WACTJ,EAAO,IAAIK,MAAM,gCAChB,OAGCC,EAAgB,IAAIR,QAAQ,SAACC,GACjCN,SAASC,KAAKO,iBAAiB,QAAS,SAACC,GACvCb,GAAY,EACZU,EAAQ,iCAGVN,SAASC,KAAKO,iBAAiB,cAAe,SAACC,GAC7CA,EAAIK,iBACJjB,GAAa,EACbS,EAAQ,mCAINS,EAAe,IAAIV,QAAQ,SAACC,EAASC,GACzCP,SAASC,KAAKO,iBAAiB,QAAS,SAACC,GACnCb,GAAaC,GACfS,EAAQ,gCAIZN,SAASC,KAAKO,iBAAiB,cAAe,SAACC,GACzCb,GAAaC,GACfS,EAAQ,kCAKdF,EACGY,KAAK,WAAMlB,OAAAA,EAAe,gCAC1BmB,MAAM,WAAMd,OAAAA,EAAgB,gCAE/BU,EACGG,KAAK,WAAMlB,OAAAA,EAAe,iCAE7BiB,EACGC,KAAK,WAAMlB,OAAAA,EAAe","file":"main.75ca5afe.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nlet leftClick = '';\nlet rightClick = '';\n\nconst resolveMessage = (text) => {\n  document.body.insertAdjacentHTML('afterbegin', `\n    <div class=\"success\" data-qa=\"notification\">\n      ${text}\n    </div>\n  `);\n};\nconst rejectedMessage = (text) => {\n  document.body.insertAdjacentHTML('afterbegin', `\n  <div class=\"warning\" data-qa=\"notification\">\n    ${text}\n  </div>\n`);\n};\n\nconst firstPromise = new Promise((resolve, reject) => {\n  document.body.addEventListener('click', (evt) => {\n    if (evt.hasClickedLeft) {\n      return;\n    }\n    leftClick = true;\n    resolve('First promise was resolved');\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\nconst secondPromise = new Promise((resolve) => {\n  document.body.addEventListener('click', (evt) => {\n    leftClick = true;\n    resolve('Second promise was resolved');\n  });\n\n  document.body.addEventListener('contextmenu', (evt) => {\n    evt.preventDefault();\n    rightClick = true;\n    resolve('Second promise was resolved');\n  });\n});\n\nconst thirdPromise = new Promise((resolve, reject) => {\n  document.body.addEventListener('click', (evt) => {\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n\n  document.body.addEventListener('contextmenu', (evt) => {\n    if (leftClick && rightClick) {\n      resolve('Third promise was resolved');\n    }\n  });\n});\n\nfirstPromise\n  .then(() => resolveMessage('First promise was resolved'))\n  .catch(() => rejectedMessage('First promise was rejected'));\n\nsecondPromise\n  .then(() => resolveMessage('Second promise was resolved'));\n\nthirdPromise\n  .then(() => resolveMessage('Third promise was resolved'));\n"]}